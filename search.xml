<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/01/24/python-lda-xun-lian-shu-ju-shi-xian-ke-shi-hua/"/>
      <url>/2022/01/24/python-lda-xun-lian-shu-ju-shi-xian-ke-shi-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="python-LDA训练数据实现可视化"><a href="#python-LDA训练数据实现可视化" class="headerlink" title="python-LDA训练数据实现可视化"></a>python-LDA训练数据实现可视化</h1><h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><ul><li>实验环境：<br>python3.7<br>PyCharm Community Edition 2019.3.3 x64  </li><li>实验数据：<br>上面给出的 舆情语料.zip可自行下载（也可使用自己的数据）<br>以及分词所需的停用词 stopwords.txt  <h2 id="二、整合数据"><a href="#二、整合数据" class="headerlink" title="二、整合数据"></a>二、整合数据</h2>下载好语料后会发现有两个文件夹，train是训练数据 test是测试数据  <img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262043057.png">  每个文件夹中都有八个主题的小文件夹  </li></ul><div align="left"><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262043060.png" width="60%" height="50%"></div><p>每个小文件夹中又有许多.txt文本，其中训练文件中有40个，测试文件中有10个  </p><div align="left"><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262043061.png" width="60%" height="50%"></div><p>整合数据的目的就是将所有.txt文件整合到一个文本中备用<br>所用代码为 1-zhengh.py<br>注意修改文件路径！<br><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262043062.png"><br>整合好的文本都存到了result.txt文件中，如图  </p><div align="left"><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262043063.png" width="50%" height="40%"></div> <h2 id="三、分词"><a href="#三、分词" class="headerlink" title="三、分词"></a>三、分词</h2><p>所用代码为 2-fenci.py<br>这里用到了停用词stopword（还是注意修改文件路径！）<br><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262043064.png"><br>结果如下，已经将一些对主题无帮助词语的去掉  </p><div align="left"><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262043065.png" width="50%" height="40%"></div> <h2 id="四、词云制作"><a href="#四、词云制作" class="headerlink" title="四、词云制作"></a>四、词云制作</h2><p>注：这一步与本项目无关，是我自己临时加的，可做可不做<br>所用代码为 3-ciyun.py<br>将分好词的文件制作成词云，背景图片可自己找，无关所谓，我做出来的是这种效果    </p><div align="left"><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262043066.png" width="70%" height="60%"></div><div align="left"><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262043067.png" width="70%" height="60%"></div><h2 id="五、训练模型及可视化"><a href="#五、训练模型及可视化" class="headerlink" title="五、训练模型及可视化"></a>五、训练模型及可视化</h2><p>所用代码为 4-lda.py<br>此数据共4084个文档，主题词共690个<br><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262053723.JPG"><br>训练的主题个数共8个，具体如图所示<br><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262050896.JPG"><br>数据可视化<br>图中圆圈代表不同的主题,圆圈的大小代表主题的重要程度,圆圈越大表示该主题对应数据来说更重要。<br>如果圆圈之间有相互重叠则说明它们所代表的主题有相似之处<br><img src="https://cdn.jsdelivr.net/gh/hren0315/imgbed/imgbed/post202201262050895.JPG"><br>此项目完成</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/20/hello-world/"/>
      <url>/2022/01/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
